"use strict";

function _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArray(r) { if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r); }
function _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }
function _possibleConstructorReturn(t, e) { if (e && ("object" == _typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return _assertThisInitialized(t); }
function _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }
function _inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && _setPrototypeOf(t, e); }
function _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }
function _createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n9 = 0, F = function F() {}; return { s: F, n: function n() { return _n9 >= r.length ? { done: !0 } : { done: !1, value: r[_n9++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t["return"] || t["return"](); } finally { if (u) throw o; } } }; }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
/*!
* chartjs-plugin-annotation v3.0.1
* https://www.chartjs.org/chartjs-plugin-annotation/index
 * (c) 2023 chartjs-plugin-annotation Contributors
 * Released under the MIT License
 */
!function (t, e) {
  "object" == (typeof exports === "undefined" ? "undefined" : _typeof(exports)) && "undefined" != typeof module ? module.exports = e(require("chart.js"), require("chart.js/helpers")) : "function" == typeof define && define.amd ? define(["chart.js", "chart.js/helpers"], e) : (t = "undefined" != typeof globalThis ? globalThis : t || self)["chartjs-plugin-annotation"] = e(t.Chart, t.Chart.helpers);
}(void 0, function (t, e) {
  "use strict";

  var o = {
    modes: {
      point: function point(t, e) {
        return r(t, e, {
          intersect: !0
        });
      },
      nearest: function nearest(t, o, n) {
        return function (t, o, n) {
          var i = Number.POSITIVE_INFINITY;
          return r(t, o, n).reduce(function (t, r) {
            var s = r.getCenterPoint(),
              a = function (t, e, o) {
                if ("x" === o) return {
                  x: t.x,
                  y: e.y
                };
                if ("y" === o) return {
                  x: e.x,
                  y: t.y
                };
                return e;
              }(o, s, n.axis),
              d = e.distanceBetweenPoints(o, a);
            return d < i ? (t = [r], i = d) : d === i && t.push(r), t;
          }, []).sort(function (t, e) {
            return t._index - e._index;
          }).slice(0, 1);
        }(t, o, n);
      },
      x: function x(t, e, o) {
        return r(t, e, {
          intersect: o.intersect,
          axis: "x"
        });
      },
      y: function y(t, e, o) {
        return r(t, e, {
          intersect: o.intersect,
          axis: "y"
        });
      }
    }
  };
  function n(t, e, n) {
    return (o.modes[n.mode] || o.modes.nearest)(t, e, n);
  }
  function r(t, e, o) {
    return t.visibleElements.filter(function (t) {
      return o.intersect ? t.inRange(e.x, e.y) : function (t, e, o) {
        return "x" !== o && "y" !== o ? t.inRange(e.x, e.y, "x", !0) || t.inRange(e.x, e.y, "y", !0) : t.inRange(e.x, e.y, o, !0);
      }(t, e, o.axis);
    });
  }
  var i = function i(t, e) {
      return e > t || t.length > e.length && t.slice(0, e.length) === e;
    },
    s = .001,
    a = function a(t, e, o) {
      return Math.min(o, Math.max(e, t));
    };
  function d(t, e, o) {
    for (var _i = 0, _Object$keys = Object.keys(t); _i < _Object$keys.length; _i++) {
      var _n = _Object$keys[_i];
      t[_n] = a(t[_n], e, o);
    }
    return t;
  }
  function c(t, _ref, i, a) {
    var e = _ref.x,
      o = _ref.y,
      n = _ref.x2,
      r = _ref.y2;
    var d = a / 2,
      c = t.x >= e - d - s && t.x <= n + d + s,
      l = t.y >= o - d - s && t.y <= r + d + s;
    return "x" === i ? c : ("y" === i || c) && l;
  }
  function l(t, e) {
    var _t$getProps = t.getProps(["centerX", "centerY"], e),
      o = _t$getProps.centerX,
      n = _t$getProps.centerY;
    return {
      x: o,
      y: n
    };
  }
  var h = function h(t) {
      return "string" == typeof t && t.endsWith("%");
    },
    u = function u(t) {
      return parseFloat(t) / 100;
    },
    f = function f(t) {
      return a(u(t), 0, 1);
    },
    x = function x(t, e) {
      return {
        x: t,
        y: e,
        x2: t,
        y2: e,
        width: 0,
        height: 0
      };
    },
    y = {
      box: function box(t) {
        return x(t.centerX, t.centerY);
      },
      ellipse: function ellipse(t) {
        return {
          centerX: t.centerX,
          centerY: t.centerX,
          radius: 0,
          width: 0,
          height: 0
        };
      },
      label: function label(t) {
        return x(t.centerX, t.centerY);
      },
      line: function line(t) {
        return x(t.x, t.y);
      },
      point: function point(t) {
        return {
          centerX: t.centerX,
          centerY: t.centerY,
          radius: 0,
          width: 0,
          height: 0
        };
      },
      polygon: function polygon(t) {
        return x(t.centerX, t.centerY);
      }
    };
  function p(t, e) {
    return "start" === e ? 0 : "end" === e ? t : h(e) ? f(e) * t : t / 2;
  }
  function b(t, e) {
    var o = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !0;
    return "number" == typeof e ? e : h(e) ? (o ? f(e) : u(e)) * t : t;
  }
  function g(t) {
    var o = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "center";
    return e.isObject(t) ? {
      x: e.valueOrDefault(t.x, o),
      y: e.valueOrDefault(t.y, o)
    } : {
      x: t = e.valueOrDefault(t, o),
      y: t
    };
  }
  function m(t) {
    return t && (e.defined(t.xValue) || e.defined(t.yValue));
  }
  function v(t, o, n) {
    var r = n.init;
    if (r) return !0 === r ? M(o, n) : function (t, o, n) {
      var r = e.callback(n.init, [{
        chart: t,
        properties: o,
        options: n
      }]);
      if (!0 === r) return M(o, n);
      if (e.isObject(r)) return r;
    }(t, o, n);
  }
  function w(t, o, n) {
    var r = !1;
    return o.forEach(function (o) {
      e.isFunction(t[o]) ? (r = !0, n[o] = t[o]) : e.defined(n[o]) && delete n[o];
    }), r;
  }
  function M(t, e) {
    var o = e.type || "line";
    return y[o](t);
  }
  var P = new Map(),
    S = function S(t) {
      return isNaN(t) || t <= 0;
    },
    C = function C(t) {
      return t.reduce(function (t, e) {
        return t += e.string;
      }, "");
    };
  function k(t) {
    if (t && "object" == _typeof(t)) {
      var _e = t.toString();
      return "[object HTMLImageElement]" === _e || "[object HTMLCanvasElement]" === _e;
    }
  }
  function D(t, _ref2, r) {
    var o = _ref2.x,
      n = _ref2.y;
    r && (t.translate(o, n), t.rotate(e.toRadians(r)), t.translate(-o, -n));
  }
  function A(t, e) {
    if (e && e.borderWidth) return t.lineCap = e.borderCapStyle, t.setLineDash(e.borderDash), t.lineDashOffset = e.borderDashOffset, t.lineJoin = e.borderJoinStyle, t.lineWidth = e.borderWidth, t.strokeStyle = e.borderColor, !0;
  }
  function j(t, e) {
    t.shadowColor = e.backgroundShadowColor, t.shadowBlur = e.shadowBlur, t.shadowOffsetX = e.shadowOffsetX, t.shadowOffsetY = e.shadowOffsetY;
  }
  function I(t, o) {
    var n = o.content;
    if (k(n)) return {
      width: b(n.width, o.width),
      height: b(n.height, o.height)
    };
    var r = o.font,
      i = e.isArray(r) ? r.map(function (t) {
        return e.toFont(t);
      }) : [e.toFont(r)],
      s = o.textStrokeWidth,
      a = e.isArray(n) ? n : [n],
      d = a.join() + C(i) + s + (t._measureText ? "-spriting" : "");
    return P.has(d) || P.set(d, function (t, e, o, n) {
      t.save();
      var r = e.length;
      var i = 0,
        s = n;
      for (var _a = 0; _a < r; _a++) {
        var _r = o[Math.min(_a, o.length - 1)];
        t.font = _r.string;
        var _d = e[_a];
        i = Math.max(i, t.measureText(_d).width + n), s += _r.lineHeight;
      }
      return t.restore(), {
        width: i,
        height: s
      };
    }(t, a, i, s)), P.get(d);
  }
  function O(t, o, n) {
    var r = o.x,
      i = o.y,
      s = o.width,
      a = o.height;
    t.save(), j(t, n);
    var c = A(t, n);
    t.fillStyle = n.backgroundColor, t.beginPath(), e.addRoundedRectPath(t, {
      x: r,
      y: i,
      w: s,
      h: a,
      radius: d(e.toTRBLCorners(n.borderRadius), 0, Math.min(s, a) / 2)
    }), t.closePath(), t.fill(), c && (t.shadowColor = n.borderShadowColor, t.stroke()), t.restore();
  }
  function T(t, o, n) {
    var r = n.content;
    if (k(r)) return t.save(), t.globalAlpha = function (t, o) {
      var n = e.isNumber(t) ? t : o;
      return e.isNumber(n) ? a(n, 0, 1) : 1;
    }(n.opacity, r.style.opacity), t.drawImage(r, o.x, o.y, o.width, o.height), void t.restore();
    var i = e.isArray(r) ? r : [r],
      s = n.font,
      d = e.isArray(s) ? s.map(function (t) {
        return e.toFont(t);
      }) : [e.toFont(s)],
      c = n.color,
      l = e.isArray(c) ? c : [c],
      h = function (t, e) {
        var o = t.x,
          n = t.width,
          r = e.textAlign;
        return "center" === r ? o + n / 2 : "end" === r || "right" === r ? o + n : o;
      }(o, n),
      u = o.y + n.textStrokeWidth / 2;
    t.save(), t.textBaseline = "middle", t.textAlign = n.textAlign, function (t, e) {
      if (e.textStrokeWidth > 0) return t.lineJoin = "round", t.miterLimit = 2, t.lineWidth = e.textStrokeWidth, t.strokeStyle = e.textStrokeColor, !0;
    }(t, n) && function (t, _ref3, n, r) {
      var e = _ref3.x,
        o = _ref3.y;
      t.beginPath();
      var i = 0;
      n.forEach(function (n, s) {
        var a = r[Math.min(s, r.length - 1)],
          d = a.lineHeight;
        t.font = a.string, t.strokeText(n, e, o + d / 2 + i), i += d;
      }), t.stroke();
    }(t, {
      x: h,
      y: u
    }, i, d), function (t, _ref4, n, _ref5) {
      var e = _ref4.x,
        o = _ref4.y;
      var r = _ref5.fonts,
        i = _ref5.colors;
      var s = 0;
      n.forEach(function (n, a) {
        var d = i[Math.min(a, i.length - 1)],
          c = r[Math.min(a, r.length - 1)],
          l = c.lineHeight;
        t.beginPath(), t.font = c.string, t.fillStyle = d, t.fillText(n, e, o + l / 2 + s), s += l, t.fill();
      });
    }(t, {
      x: h,
      y: u
    }, i, {
      fonts: d,
      colors: l
    }), t.restore();
  }
  function R(t, o, n, r) {
    var i = o.radius,
      s = o.options,
      a = s.pointStyle,
      d = s.rotation;
    var c = (d || 0) * e.RAD_PER_DEG;
    if (k(a)) return t.save(), t.translate(n, r), t.rotate(c), t.drawImage(a, -a.width / 2, -a.height / 2, a.width, a.height), void t.restore();
    S(i) || function (t, _ref6) {
      var o = _ref6.x,
        n = _ref6.y,
        r = _ref6.radius,
        i = _ref6.rotation,
        s = _ref6.style,
        a = _ref6.rad;
      var d, c, l, h;
      switch (t.beginPath(), s) {
        default:
          t.arc(o, n, r, 0, e.TAU), t.closePath();
          break;
        case "triangle":
          t.moveTo(o + Math.sin(a) * r, n - Math.cos(a) * r), a += e.TWO_THIRDS_PI, t.lineTo(o + Math.sin(a) * r, n - Math.cos(a) * r), a += e.TWO_THIRDS_PI, t.lineTo(o + Math.sin(a) * r, n - Math.cos(a) * r), t.closePath();
          break;
        case "rectRounded":
          h = .516 * r, l = r - h, d = Math.cos(a + e.QUARTER_PI) * l, c = Math.sin(a + e.QUARTER_PI) * l, t.arc(o - d, n - c, h, a - e.PI, a - e.HALF_PI), t.arc(o + c, n - d, h, a - e.HALF_PI, a), t.arc(o + d, n + c, h, a, a + e.HALF_PI), t.arc(o - c, n + d, h, a + e.HALF_PI, a + e.PI), t.closePath();
          break;
        case "rect":
          if (!i) {
            l = Math.SQRT1_2 * r, t.rect(o - l, n - l, 2 * l, 2 * l);
            break;
          }
          a += e.QUARTER_PI;
        case "rectRot":
          d = Math.cos(a) * r, c = Math.sin(a) * r, t.moveTo(o - d, n - c), t.lineTo(o + c, n - d), t.lineTo(o + d, n + c), t.lineTo(o - c, n + d), t.closePath();
          break;
        case "crossRot":
          a += e.QUARTER_PI;
        case "cross":
          d = Math.cos(a) * r, c = Math.sin(a) * r, t.moveTo(o - d, n - c), t.lineTo(o + d, n + c), t.moveTo(o + c, n - d), t.lineTo(o - c, n + d);
          break;
        case "star":
          d = Math.cos(a) * r, c = Math.sin(a) * r, t.moveTo(o - d, n - c), t.lineTo(o + d, n + c), t.moveTo(o + c, n - d), t.lineTo(o - c, n + d), a += e.QUARTER_PI, d = Math.cos(a) * r, c = Math.sin(a) * r, t.moveTo(o - d, n - c), t.lineTo(o + d, n + c), t.moveTo(o + c, n - d), t.lineTo(o - c, n + d);
          break;
        case "line":
          d = Math.cos(a) * r, c = Math.sin(a) * r, t.moveTo(o - d, n - c), t.lineTo(o + d, n + c);
          break;
        case "dash":
          t.moveTo(o, n), t.lineTo(o + Math.cos(a) * r, n + Math.sin(a) * r);
      }
      t.fill();
    }(t, {
      x: n,
      y: r,
      radius: i,
      rotation: d,
      style: a,
      rad: c
    });
  }
  var Y = {
    xScaleID: {
      min: "xMin",
      max: "xMax",
      start: "left",
      end: "right",
      startProp: "x",
      endProp: "x2"
    },
    yScaleID: {
      min: "yMin",
      max: "yMax",
      start: "bottom",
      end: "top",
      startProp: "y",
      endProp: "y2"
    }
  };
  function X(t, o, n) {
    return o = "number" == typeof o ? o : t.parse(o), e.isFinite(o) ? t.getPixelForValue(o) : n;
  }
  function E(t, e, o) {
    var n = e[o];
    if (n || "scaleID" === o) return n;
    var r = o.charAt(0),
      i = Object.values(t).filter(function (t) {
        return t.axis && t.axis === r;
      });
    return i.length ? i[0].id : r;
  }
  function W(t, e) {
    if (t) {
      var _o = t.options.reverse;
      return {
        start: X(t, e.min, _o ? e.end : e.start),
        end: X(t, e.max, _o ? e.start : e.end)
      };
    }
  }
  function _(t, e) {
    var o = t.chartArea,
      n = t.scales,
      r = n[E(n, e, "xScaleID")],
      i = n[E(n, e, "yScaleID")];
    var s = o.width / 2,
      a = o.height / 2;
    return r && (s = X(r, e.xValue, r.left + r.width / 2)), i && (a = X(i, e.yValue, i.top + i.height / 2)), {
      x: s,
      y: a
    };
  }
  function z(t, e) {
    var o = t.scales,
      n = o[E(o, e, "xScaleID")],
      r = o[E(o, e, "yScaleID")];
    if (!n && !r) return {};
    var _ref7 = n || t.chartArea,
      i = _ref7.left,
      s = _ref7.right,
      _ref8 = r || t.chartArea,
      a = _ref8.top,
      d = _ref8.bottom;
    var c = V(n, {
      min: e.xMin,
      max: e.xMax,
      start: i,
      end: s
    });
    i = c.start, s = c.end;
    var l = V(r, {
      min: e.yMin,
      max: e.yMax,
      start: d,
      end: a
    });
    return a = l.start, d = l.end, {
      x: i,
      y: a,
      x2: s,
      y2: d,
      width: s - i,
      height: d - a,
      centerX: i + (s - i) / 2,
      centerY: a + (d - a) / 2
    };
  }
  function F(t, e) {
    if (!m(e)) {
      var _o2 = z(t, e);
      var _n2 = e.radius;
      _n2 && !isNaN(_n2) || (_n2 = Math.min(_o2.width, _o2.height) / 2, e.radius = _n2);
      var _r2 = 2 * _n2,
        _i2 = _o2.centerX + e.xAdjust,
        _s = _o2.centerY + e.yAdjust;
      return {
        x: _i2 - _n2,
        y: _s - _n2,
        x2: _i2 + _n2,
        y2: _s + _n2,
        centerX: _i2,
        centerY: _s,
        width: _r2,
        height: _r2,
        radius: _n2
      };
    }
    return function (t, e) {
      var o = _(t, e),
        n = 2 * e.radius;
      return {
        x: o.x - e.radius + e.xAdjust,
        y: o.y - e.radius + e.yAdjust,
        x2: o.x + e.radius + e.xAdjust,
        y2: o.y + e.radius + e.yAdjust,
        centerX: o.x + e.xAdjust,
        centerY: o.y + e.yAdjust,
        radius: e.radius,
        width: n,
        height: n
      };
    }(t, e);
  }
  function N(t, e) {
    var o = t.scales,
      n = t.chartArea,
      r = o[e.scaleID],
      i = {
        x: n.left,
        y: n.top,
        x2: n.right,
        y2: n.bottom
      };
    return r ? function (t, e, o) {
      var n = X(t, o.value, NaN),
        r = X(t, o.endValue, n);
      t.isHorizontal() ? (e.x = n, e.x2 = r) : (e.y = n, e.y2 = r);
    }(r, i, e) : function (t, e, o) {
      for (var _i3 = 0, _Object$keys2 = Object.keys(Y); _i3 < _Object$keys2.length; _i3++) {
        var _n3 = _Object$keys2[_i3];
        var _r3 = t[E(t, o, _n3)];
        if (_r3) {
          var _Y$_n = Y[_n3],
            _t2 = _Y$_n.min,
            _i4 = _Y$_n.max,
            _s2 = _Y$_n.start,
            _a2 = _Y$_n.end,
            _d2 = _Y$_n.startProp,
            _c = _Y$_n.endProp,
            _l = W(_r3, {
              min: o[_t2],
              max: o[_i4],
              start: _r3[_s2],
              end: _r3[_a2]
            });
          e[_d2] = _l.start, e[_c] = _l.end;
        }
      }
    }(o, i, e), i;
  }
  function H(t, e) {
    var o = z(t, e);
    return o.initProperties = v(t, o, e), o.elements = [{
      type: "label",
      optionScope: "label",
      properties: L(t, o, e),
      initProperties: o.initProperties
    }], o;
  }
  function V(t, e) {
    var o = W(t, e) || e;
    return {
      start: Math.min(o.start, o.end),
      end: Math.max(o.start, o.end)
    };
  }
  function B(t, e) {
    var o = t.start,
      n = t.end,
      r = t.borderWidth,
      i = e.position,
      _e$padding = e.padding,
      s = _e$padding.start,
      a = _e$padding.end,
      d = e.adjust;
    return o + r / 2 + d + p(n - r - o - s - a - e.size, i);
  }
  function L(t, o, n) {
    var r = n.label;
    r.backgroundColor = "transparent", r.callout.display = !1;
    var i = g(r.position),
      s = e.toPadding(r.padding),
      a = I(t.ctx, r),
      d = function (_ref9, o, n, r) {
        var t = _ref9.properties,
          e = _ref9.options;
        var i = t.x,
          s = t.x2,
          a = t.width;
        return B({
          start: i,
          end: s,
          size: a,
          borderWidth: e.borderWidth
        }, {
          position: n.x,
          padding: {
            start: r.left,
            end: r.right
          },
          adjust: e.label.xAdjust,
          size: o.width
        });
      }({
        properties: o,
        options: n
      }, a, i, s),
      c = function (_ref10, o, n, r) {
        var t = _ref10.properties,
          e = _ref10.options;
        var i = t.y,
          s = t.y2,
          a = t.height;
        return B({
          start: i,
          end: s,
          size: a,
          borderWidth: e.borderWidth
        }, {
          position: n.y,
          padding: {
            start: r.top,
            end: r.bottom
          },
          adjust: e.label.yAdjust,
          size: o.height
        });
      }({
        properties: o,
        options: n
      }, a, i, s),
      l = a.width + s.width,
      h = a.height + s.height;
    return {
      x: d,
      y: c,
      x2: d + l,
      y2: c + h,
      width: l,
      height: h,
      centerX: d + l / 2,
      centerY: c + h / 2,
      rotation: r.rotation
    };
  }
  function $(t, e, o) {
    var n = Math.cos(o),
      r = Math.sin(o),
      i = e.x,
      s = e.y;
    return {
      x: i + n * (t.x - i) - r * (t.y - s),
      y: s + r * (t.x - i) + n * (t.y - s)
    };
  }
  var U = ["enter", "leave"],
    J = U.concat("click");
  function Q(t, e, o) {
    if (t.listened) switch (e.type) {
      case "mousemove":
      case "mouseout":
        return function (t, e, o) {
          if (!t.moveListened) return;
          var r;
          r = "mousemove" === e.type ? n(t, e, o.interaction) : [];
          var i = t.hovered;
          t.hovered = r;
          var s = {
            state: t,
            event: e
          };
          var a = q(s, "leave", i, r);
          return q(s, "enter", r, i) || a;
        }(t, e, o);
      case "click":
        return function (t, e, o) {
          var r = t.listeners,
            i = n(t, e, o.interaction);
          var s;
          var _iterator = _createForOfIteratorHelper(i),
            _step;
          try {
            for (_iterator.s(); !(_step = _iterator.n()).done;) {
              var _t3 = _step.value;
              s = G(_t3.options.click || r.click, _t3, e) || s;
            }
          } catch (err) {
            _iterator.e(err);
          } finally {
            _iterator.f();
          }
          return s;
        }(t, e, o);
    }
  }
  function q(_ref11, o, n, r) {
    var t = _ref11.state,
      e = _ref11.event;
    var i;
    var _iterator2 = _createForOfIteratorHelper(n),
      _step2;
    try {
      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
        var _s3 = _step2.value;
        r.indexOf(_s3) < 0 && (i = G(_s3.options[o] || t.listeners[o], _s3, e) || i);
      }
    } catch (err) {
      _iterator2.e(err);
    } finally {
      _iterator2.f();
    }
    return i;
  }
  function G(t, o, n) {
    return !0 === e.callback(t, [o.$context, n]);
  }
  var K = ["afterDraw", "beforeDraw"];
  function Z(t, o, n) {
    if (t.hooked) {
      var _r4 = o.options[n] || t.hooks[n];
      return e.callback(_r4, [o.$context]);
    }
  }
  function tt(t, o, n) {
    var r = function (t, o, n) {
      var r = o.axis,
        i = o.id,
        s = r + "ScaleID",
        a = {
          min: e.valueOrDefault(o.min, Number.NEGATIVE_INFINITY),
          max: e.valueOrDefault(o.max, Number.POSITIVE_INFINITY)
        };
      var _iterator3 = _createForOfIteratorHelper(n),
        _step3;
      try {
        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
          var _e2 = _step3.value;
          _e2.scaleID === i ? rt(_e2, o, ["value", "endValue"], a) : E(t, _e2, s) === i && rt(_e2, o, [r + "Min", r + "Max", r + "Value"], a);
        }
      } catch (err) {
        _iterator3.e(err);
      } finally {
        _iterator3.f();
      }
      return a;
    }(t.scales, o, n);
    var i = et(o, r, "min", "suggestedMin");
    i = et(o, r, "max", "suggestedMax") || i, i && e.isFunction(o.handleTickRangeOptions) && o.handleTickRangeOptions();
  }
  function et(t, o, n, r) {
    if (e.isFinite(o[n]) && !function (t, o, n) {
      return e.defined(t[o]) || e.defined(t[n]);
    }(t.options, n, r)) {
      var _e3 = t[n] !== o[n];
      return t[n] = o[n], _e3;
    }
  }
  function ot(t, e) {
    for (var _i5 = 0, _arr = ["scaleID", "xScaleID", "yScaleID"]; _i5 < _arr.length; _i5++) {
      var _o3 = _arr[_i5];
      var _n4 = E(e, t, _o3);
      _n4 && !e[_n4] && nt(t, _o3) && console.warn("No scale found with id '".concat(_n4, "' for annotation '").concat(t.id, "'"));
    }
  }
  function nt(t, o) {
    if ("scaleID" === o) return !0;
    var n = o.charAt(0);
    for (var _i6 = 0, _arr2 = ["Min", "Max", "Value"]; _i6 < _arr2.length; _i6++) {
      var _o4 = _arr2[_i6];
      if (e.defined(t[n + _o4])) return !0;
    }
    return !1;
  }
  function rt(t, o, n, r) {
    var _iterator4 = _createForOfIteratorHelper(n),
      _step4;
    try {
      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
        var _i7 = _step4.value;
        var _n5 = t[_i7];
        if (e.defined(_n5)) {
          var _t4 = o.parse(_n5);
          r.min = Math.min(r.min, _t4), r.max = Math.max(r.max, _t4);
        }
      }
    } catch (err) {
      _iterator4.e(err);
    } finally {
      _iterator4.f();
    }
  }
  var it = /*#__PURE__*/function (_t$Element) {
    function it() {
      _classCallCheck(this, it);
      return _callSuper(this, it, arguments);
    }
    _inherits(it, _t$Element);
    return _createClass(it, [{
      key: "inRange",
      value: function inRange(t, o, n, r) {
        var _$ = $({
            x: t,
            y: o
          }, this.getCenterPoint(r), e.toRadians(-this.options.rotation)),
          i = _$.x,
          s = _$.y;
        return c({
          x: i,
          y: s
        }, this.getProps(["x", "y", "x2", "y2"], r), n, this.options.borderWidth);
      }
    }, {
      key: "getCenterPoint",
      value: function getCenterPoint(t) {
        return l(this, t);
      }
    }, {
      key: "draw",
      value: function draw(t) {
        t.save(), D(t, this.getCenterPoint(), this.options.rotation), O(t, this, this.options), t.restore();
      }
    }, {
      key: "label",
      get: function get() {
        return this.elements && this.elements[0];
      }
    }, {
      key: "resolveElementProperties",
      value: function resolveElementProperties(t, e) {
        return H(t, e);
      }
    }]);
  }(t.Element);
  it.id = "boxAnnotation", it.defaults = {
    adjustScaleRange: !0,
    backgroundShadowColor: "transparent",
    borderCapStyle: "butt",
    borderDash: [],
    borderDashOffset: 0,
    borderJoinStyle: "miter",
    borderRadius: 0,
    borderShadowColor: "transparent",
    borderWidth: 1,
    display: !0,
    init: void 0,
    label: {
      backgroundColor: "transparent",
      borderWidth: 0,
      callout: {
        display: !1
      },
      color: "black",
      content: null,
      display: !1,
      drawTime: void 0,
      font: {
        family: void 0,
        lineHeight: void 0,
        size: void 0,
        style: void 0,
        weight: "bold"
      },
      height: void 0,
      opacity: void 0,
      padding: 6,
      position: "center",
      rotation: void 0,
      textAlign: "start",
      textStrokeColor: void 0,
      textStrokeWidth: 0,
      width: void 0,
      xAdjust: 0,
      yAdjust: 0,
      z: void 0
    },
    rotation: 0,
    shadowBlur: 0,
    shadowOffsetX: 0,
    shadowOffsetY: 0,
    xMax: void 0,
    xMin: void 0,
    xScaleID: void 0,
    yMax: void 0,
    yMin: void 0,
    yScaleID: void 0,
    z: 0
  }, it.defaultRoutes = {
    borderColor: "color",
    backgroundColor: "color"
  }, it.descriptors = {
    label: {
      _fallback: !0
    }
  };
  var st = ["left", "bottom", "top", "right"];
  var at = /*#__PURE__*/function (_t$Element2) {
    function at() {
      _classCallCheck(this, at);
      return _callSuper(this, at, arguments);
    }
    _inherits(at, _t$Element2);
    return _createClass(at, [{
      key: "inRange",
      value: function inRange(t, o, n, r) {
        var _$2 = $({
            x: t,
            y: o
          }, this.getCenterPoint(r), e.toRadians(-this.rotation)),
          i = _$2.x,
          s = _$2.y;
        return c({
          x: i,
          y: s
        }, this.getProps(["x", "y", "x2", "y2"], r), n, this.options.borderWidth);
      }
    }, {
      key: "getCenterPoint",
      value: function getCenterPoint(t) {
        return l(this, t);
      }
    }, {
      key: "draw",
      value: function draw(t) {
        var o = this.options,
          n = !e.defined(this._visible) || this._visible;
        o.display && o.content && n && (t.save(), D(t, this.getCenterPoint(), this.rotation), function (t, o) {
          var n = o.pointX,
            r = o.pointY,
            i = o.options,
            s = i.callout,
            a = s && s.display && function (t, o) {
              var n = o.position;
              if (st.includes(n)) return n;
              return function (t, o) {
                var n = t.x,
                  r = t.y,
                  i = t.x2,
                  s = t.y2,
                  a = t.width,
                  d = t.height,
                  c = t.pointX,
                  l = t.pointY,
                  h = t.centerX,
                  u = t.centerY,
                  f = t.rotation,
                  x = {
                    x: h,
                    y: u
                  },
                  y = o.start,
                  p = b(a, y),
                  g = b(d, y),
                  m = [n, n + p, n + p, i],
                  v = [r + g, s, r, s],
                  w = [];
                for (var _t5 = 0; _t5 < 4; _t5++) {
                  var _o5 = $({
                    x: m[_t5],
                    y: v[_t5]
                  }, x, e.toRadians(f));
                  w.push({
                    position: st[_t5],
                    distance: e.distanceBetweenPoints(_o5, {
                      x: c,
                      y: l
                    })
                  });
                }
                return w.sort(function (t, e) {
                  return t.distance - e.distance;
                })[0].position;
              }(t, o);
            }(o, s);
          if (!a || function (t, e, o) {
            var n = t.pointX,
              r = t.pointY,
              i = e.margin;
            var s = n,
              a = r;
            "left" === o ? s += i : "right" === o ? s -= i : "top" === o ? a += i : "bottom" === o && (a -= i);
            return t.inRange(s, a);
          }(o, s, a)) return;
          t.save(), t.beginPath();
          var d = A(t, s);
          if (!d) return t.restore();
          var _ref12 = function (t, e) {
              var o = t.x,
                n = t.y,
                r = t.x2,
                i = t.y2,
                s = function (t, e) {
                  var o = t.width,
                    n = t.height,
                    r = t.options,
                    i = r.callout.margin + r.borderWidth / 2;
                  if ("right" === e) return o + i;
                  if ("bottom" === e) return n + i;
                  return -i;
                }(t, e);
              var a, d;
              "left" === e || "right" === e ? (a = {
                x: o + s,
                y: n
              }, d = {
                x: a.x,
                y: i
              }) : (a = {
                x: o,
                y: n + s
              }, d = {
                x: r,
                y: a.y
              });
              return {
                separatorStart: a,
                separatorEnd: d
              };
            }(o, a),
            c = _ref12.separatorStart,
            l = _ref12.separatorEnd,
            _ref13 = function (t, e, o) {
              var n = t.y,
                r = t.width,
                i = t.height,
                s = t.options,
                a = s.callout.start,
                d = function (t, e) {
                  var o = e.side;
                  if ("left" === t || "top" === t) return -o;
                  return o;
                }(e, s.callout);
              var c, l;
              "left" === e || "right" === e ? (c = {
                x: o.x,
                y: n + b(i, a)
              }, l = {
                x: c.x + d,
                y: c.y
              }) : (c = {
                x: o.x + b(r, a),
                y: o.y
              }, l = {
                x: c.x,
                y: c.y + d
              });
              return {
                sideStart: c,
                sideEnd: l
              };
            }(o, a, c),
            h = _ref13.sideStart,
            u = _ref13.sideEnd;
          (s.margin > 0 || 0 === i.borderWidth) && (t.moveTo(c.x, c.y), t.lineTo(l.x, l.y));
          t.moveTo(h.x, h.y), t.lineTo(u.x, u.y);
          var f = $({
            x: n,
            y: r
          }, o.getCenterPoint(), e.toRadians(-o.rotation));
          t.lineTo(f.x, f.y), t.stroke(), t.restore();
        }(t, this), O(t, this, o), T(t, function (_ref14) {
          var t = _ref14.x,
            o = _ref14.y,
            n = _ref14.width,
            r = _ref14.height,
            i = _ref14.options;
          var s = i.borderWidth / 2,
            a = e.toPadding(i.padding);
          return {
            x: t + a.left + s,
            y: o + a.top + s,
            width: n - a.left - a.right - i.borderWidth,
            height: r - a.top - a.bottom - i.borderWidth
          };
        }(this), o), t.restore());
      }
    }, {
      key: "resolveElementProperties",
      value: function resolveElementProperties(t, o) {
        var n;
        if (m(o)) n = _(t, o);else {
          var _z = z(t, o),
            _e4 = _z.centerX,
            _r5 = _z.centerY;
          n = {
            x: _e4,
            y: _r5
          };
        }
        var r = e.toPadding(o.padding),
          i = function (t, e, o, n) {
            var r = e.width + n.width + o.borderWidth,
              i = e.height + n.height + o.borderWidth,
              s = g(o.position, "center"),
              a = dt(t.x, r, o.xAdjust, s.x),
              d = dt(t.y, i, o.yAdjust, s.y);
            return {
              x: a,
              y: d,
              x2: a + r,
              y2: d + i,
              width: r,
              height: i,
              centerX: a + r / 2,
              centerY: d + i / 2
            };
          }(n, I(t.ctx, o), o, r);
        return _objectSpread(_objectSpread({
          initProperties: v(t, i, o),
          pointX: n.x,
          pointY: n.y
        }, i), {}, {
          rotation: o.rotation
        });
      }
    }]);
  }(t.Element);
  function dt(t, e) {
    var o = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
    var n = arguments.length > 3 ? arguments[3] : undefined;
    return t - p(e, n) + o;
  }
  at.id = "labelAnnotation", at.defaults = {
    adjustScaleRange: !0,
    backgroundColor: "transparent",
    backgroundShadowColor: "transparent",
    borderCapStyle: "butt",
    borderDash: [],
    borderDashOffset: 0,
    borderJoinStyle: "miter",
    borderRadius: 0,
    borderShadowColor: "transparent",
    borderWidth: 0,
    callout: {
      borderCapStyle: "butt",
      borderColor: void 0,
      borderDash: [],
      borderDashOffset: 0,
      borderJoinStyle: "miter",
      borderWidth: 1,
      display: !1,
      margin: 5,
      position: "auto",
      side: 5,
      start: "50%"
    },
    color: "black",
    content: null,
    display: !0,
    font: {
      family: void 0,
      lineHeight: void 0,
      size: void 0,
      style: void 0,
      weight: void 0
    },
    height: void 0,
    init: void 0,
    opacity: void 0,
    padding: 6,
    position: "center",
    rotation: 0,
    shadowBlur: 0,
    shadowOffsetX: 0,
    shadowOffsetY: 0,
    textAlign: "center",
    textStrokeColor: void 0,
    textStrokeWidth: 0,
    width: void 0,
    xAdjust: 0,
    xMax: void 0,
    xMin: void 0,
    xScaleID: void 0,
    xValue: void 0,
    yAdjust: 0,
    yMax: void 0,
    yMin: void 0,
    yScaleID: void 0,
    yValue: void 0,
    z: 0
  }, at.defaultRoutes = {
    borderColor: "color"
  };
  var ct = function ct(t, e, o) {
      return {
        x: t.x + o * (e.x - t.x),
        y: t.y + o * (e.y - t.y)
      };
    },
    lt = function lt(t, e, o) {
      return ct(e, o, Math.abs((t - e.y) / (o.y - e.y))).x;
    },
    ht = function ht(t, e, o) {
      return ct(e, o, Math.abs((t - e.x) / (o.x - e.x))).y;
    },
    ut = function ut(t) {
      return t * t;
    },
    ft = function ft(t, e, _ref15, s) {
      var o = _ref15.x,
        n = _ref15.y,
        r = _ref15.x2,
        i = _ref15.y2;
      return "y" === s ? {
        start: Math.min(n, i),
        end: Math.max(n, i),
        value: e
      } : {
        start: Math.min(o, r),
        end: Math.max(o, r),
        value: t
      };
    },
    xt = function xt(t, e, o, n) {
      return (1 - n) * (1 - n) * t + 2 * (1 - n) * n * e + n * n * o;
    },
    yt = function yt(t, e, o, n) {
      return {
        x: xt(t.x, e.x, o.x, n),
        y: xt(t.y, e.y, o.y, n)
      };
    },
    pt = function pt(t, e, o, n) {
      return 2 * (1 - n) * (e - t) + 2 * n * (o - e);
    },
    bt = function bt(t, o, n, r) {
      return -Math.atan2(pt(t.x, o.x, n.x, r), pt(t.y, o.y, n.y, r)) + .5 * e.PI;
    };
  var gt = /*#__PURE__*/function (_t$Element3) {
    function gt() {
      _classCallCheck(this, gt);
      return _callSuper(this, gt, arguments);
    }
    _inherits(gt, _t$Element3);
    return _createClass(gt, [{
      key: "inRange",
      value: function inRange(t, e, o, n) {
        var r = this.options.borderWidth / 2;
        if ("x" !== o && "y" !== o) {
          var _o6 = {
              mouseX: t,
              mouseY: e
            },
            _i8 = this.path,
            _a3 = this.ctx;
          if (_i8) {
            A(_a3, this.options);
            var _r6 = this.$context.chart,
              _s4 = t * _r6.currentDevicePixelRatio,
              _d3 = e * _r6.currentDevicePixelRatio,
              _c2 = _a3.isPointInStroke(_i8, _s4, _d3) || wt(this, _o6, n);
            return _a3.restore(), _c2;
          }
          return function (t, _ref16) {
            var e = _ref16.mouseX,
              o = _ref16.mouseY;
            var n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : s;
            var r = arguments.length > 3 ? arguments[3] : undefined;
            var _t$getProps2 = t.getProps(["x", "y", "x2", "y2"], r),
              i = _t$getProps2.x,
              a = _t$getProps2.y,
              d = _t$getProps2.x2,
              c = _t$getProps2.y2,
              l = d - i,
              h = c - a,
              u = ut(l) + ut(h),
              f = 0 === u ? -1 : ((e - i) * l + (o - a) * h) / u;
            var x, y;
            f < 0 ? (x = i, y = a) : f > 1 ? (x = d, y = c) : (x = i + f * l, y = a + f * h);
            return ut(e - x) + ut(o - y) <= n;
          }(this, _o6, ut(r), n) || wt(this, _o6, n);
        }
        return function (t, _ref17, n, _ref18) {
          var e = _ref17.mouseX,
            o = _ref17.mouseY;
          var r = _ref18.hBorderWidth,
            i = _ref18.useFinalPosition;
          var s = ft(e, o, t.getProps(["x", "y", "x2", "y2"], i), n);
          return s.value >= s.start - r && s.value <= s.end + r || wt(t, {
            mouseX: e,
            mouseY: o
          }, i, n);
        }(this, {
          mouseX: t,
          mouseY: e
        }, o, {
          hBorderWidth: r,
          useFinalPosition: n
        });
      }
    }, {
      key: "getCenterPoint",
      value: function getCenterPoint(t) {
        return l(this, t);
      }
    }, {
      key: "draw",
      value: function draw(t) {
        var o = this.x,
          n = this.y,
          r = this.x2,
          i = this.y2,
          s = this.cp,
          a = this.options;
        if (t.save(), !A(t, a)) return t.restore();
        j(t, a);
        var d = Math.sqrt(Math.pow(r - o, 2) + Math.pow(i - n, 2));
        if (a.curve && s) return function (t, o, n, r) {
          var i = o.x,
            s = o.y,
            a = o.x2,
            d = o.y2,
            c = o.options,
            _St = St(o),
            l = _St.startOpts,
            h = _St.endOpts,
            u = _St.startAdjust,
            f = _St.endAdjust,
            x = {
              x: i,
              y: s
            },
            y = {
              x: a,
              y: d
            },
            p = bt(x, n, y, 0),
            b = bt(x, n, y, 1) - e.PI,
            g = yt(x, n, y, u / r),
            m = yt(x, n, y, 1 - f / r),
            v = new Path2D();
          t.beginPath(), v.moveTo(g.x, g.y), v.quadraticCurveTo(n.x, n.y, m.x, m.y), t.shadowColor = c.borderShadowColor, t.stroke(v), o.path = v, o.ctx = t, Dt(t, g, {
            angle: p,
            adjust: u
          }, l), Dt(t, m, {
            angle: b,
            adjust: f
          }, h);
        }(t, this, s, d), t.restore();
        var _St2 = St(this),
          c = _St2.startOpts,
          l = _St2.endOpts,
          h = _St2.startAdjust,
          u = _St2.endAdjust,
          f = Math.atan2(i - n, r - o);
        t.translate(o, n), t.rotate(f), t.beginPath(), t.moveTo(0 + h, 0), t.lineTo(d - u, 0), t.shadowColor = a.borderShadowColor, t.stroke(), kt(t, 0, h, c), kt(t, d, -u, l), t.restore();
      }
    }, {
      key: "label",
      get: function get() {
        return this.elements && this.elements[0];
      }
    }, {
      key: "resolveElementProperties",
      value: function resolveElementProperties(t, o) {
        var n = N(t, o),
          r = n.x,
          i = n.y,
          s = n.x2,
          a = n.y2,
          d = function (_ref19, _ref20) {
            var t = _ref19.x,
              e = _ref19.y,
              o = _ref19.x2,
              n = _ref19.y2;
            var r = _ref20.top,
              i = _ref20.right,
              s = _ref20.bottom,
              a = _ref20.left;
            return !(t < a && o < a || t > i && o > i || e < r && n < r || e > s && n > s);
          }(n, t.chartArea),
          c = d ? function (t, e, o) {
            var _vt = vt(t, e, o),
              n = _vt.x,
              r = _vt.y,
              _vt2 = vt(e, t, o),
              i = _vt2.x,
              s = _vt2.y;
            return {
              x: n,
              y: r,
              x2: i,
              y2: s,
              width: Math.abs(i - n),
              height: Math.abs(s - r)
            };
          }({
            x: r,
            y: i
          }, {
            x: s,
            y: a
          }, t.chartArea) : {
            x: r,
            y: i,
            x2: s,
            y2: a,
            width: Math.abs(s - r),
            height: Math.abs(a - i)
          };
        if (c.centerX = (s + r) / 2, c.centerY = (a + i) / 2, c.initProperties = v(t, c, o), o.curve) {
          var _t6 = {
              x: c.x,
              y: c.y
            },
            _n6 = {
              x: c.x2,
              y: c.y2
            };
          c.cp = function (t, e, o) {
            var n = t.x,
              r = t.y,
              i = t.x2,
              s = t.y2,
              a = t.centerX,
              d = t.centerY,
              c = Math.atan2(s - r, i - n),
              l = g(e.controlPoint, 0);
            return $({
              x: a + b(o, l.x, !1),
              y: d + b(o, l.y, !1)
            }, {
              x: a,
              y: d
            }, c);
          }(c, o, e.distanceBetweenPoints(_t6, _n6));
        }
        var l = function (t, o, n) {
          var r = n.borderWidth,
            i = e.toPadding(n.padding),
            s = I(t.ctx, n),
            a = s.width + i.width + r,
            d = s.height + i.height + r;
          return function (t, o, n, r) {
            var i = n.width,
              s = n.height,
              a = n.padding,
              d = o.xAdjust,
              c = o.yAdjust,
              l = {
                x: t.x,
                y: t.y
              },
              h = {
                x: t.x2,
                y: t.y2
              },
              u = "auto" === o.rotation ? function (t) {
                var o = t.x,
                  n = t.y,
                  r = t.x2,
                  i = t.y2,
                  s = Math.atan2(i - n, r - o);
                return s > e.PI / 2 ? s - e.PI : s < e.PI / -2 ? s + e.PI : s;
              }(t) : e.toRadians(o.rotation),
              f = function (t, e, o) {
                var n = Math.cos(o),
                  r = Math.sin(o);
                return {
                  w: Math.abs(t * n) + Math.abs(e * r),
                  h: Math.abs(t * r) + Math.abs(e * n)
                };
              }(i, s, u),
              x = function (t, e, o, n) {
                var r;
                var i = function (t, e) {
                  var o = t.x,
                    n = t.x2,
                    r = t.y,
                    i = t.y2,
                    s = Math.min(r, i) - e.top,
                    a = Math.min(o, n) - e.left,
                    d = e.bottom - Math.max(r, i),
                    c = e.right - Math.max(o, n);
                  return {
                    x: Math.min(a, c),
                    y: Math.min(s, d),
                    dx: a <= c ? 1 : -1,
                    dy: s <= d ? 1 : -1
                  };
                }(t, n);
                r = "start" === e.position ? Mt({
                  w: t.x2 - t.x,
                  h: t.y2 - t.y
                }, o, e, i) : "end" === e.position ? 1 - Mt({
                  w: t.x - t.x2,
                  h: t.y - t.y2
                }, o, e, i) : p(1, e.position);
                return r;
              }(t, o, {
                labelSize: f,
                padding: a
              }, r),
              y = t.cp ? yt(l, t.cp, h, x) : ct(l, h, x),
              b = {
                size: f.w,
                min: r.left,
                max: r.right,
                padding: a.left
              },
              g = {
                size: f.h,
                min: r.top,
                max: r.bottom,
                padding: a.top
              },
              m = Pt(y.x, b) + d,
              v = Pt(y.y, g) + c;
            return {
              x: m - i / 2,
              y: v - s / 2,
              x2: m + i / 2,
              y2: v + s / 2,
              centerX: m,
              centerY: v,
              pointX: y.x,
              pointY: y.y,
              width: i,
              height: s,
              rotation: e.toDegrees(u)
            };
          }(o, n, {
            width: a,
            height: d,
            padding: i
          }, t.chartArea);
        }(t, c, o.label);
        return l._visible = d, c.elements = [{
          type: "label",
          optionScope: "label",
          properties: l,
          initProperties: c.initProperties
        }], c;
      }
    }]);
  }(t.Element);
  gt.id = "lineAnnotation";
  var mt = {
    backgroundColor: void 0,
    backgroundShadowColor: void 0,
    borderColor: void 0,
    borderDash: void 0,
    borderDashOffset: void 0,
    borderShadowColor: void 0,
    borderWidth: void 0,
    display: void 0,
    fill: void 0,
    length: void 0,
    shadowBlur: void 0,
    shadowOffsetX: void 0,
    shadowOffsetY: void 0,
    width: void 0
  };
  function vt(_ref21, o, _ref22) {
    var t = _ref21.x,
      e = _ref21.y;
    var n = _ref22.top,
      r = _ref22.right,
      i = _ref22.bottom,
      s = _ref22.left;
    return t < s && (e = ht(s, {
      x: t,
      y: e
    }, o), t = s), t > r && (e = ht(r, {
      x: t,
      y: e
    }, o), t = r), e < n && (t = lt(n, {
      x: t,
      y: e
    }, o), e = n), e > i && (t = lt(i, {
      x: t,
      y: e
    }, o), e = i), {
      x: t,
      y: e
    };
  }
  function wt(t, _ref23, n, r) {
    var e = _ref23.mouseX,
      o = _ref23.mouseY;
    var i = t.label;
    return i.options.display && i.inRange(e, o, r, n);
  }
  function Mt(t, e, o, n) {
    var r = e.labelSize,
      i = e.padding,
      s = t.w * n.dx,
      d = t.h * n.dy,
      c = s > 0 && (r.w / 2 + i.left - n.x) / s,
      l = d > 0 && (r.h / 2 + i.top - n.y) / d;
    return a(Math.max(c, l), 0, .25);
  }
  function Pt(t, e) {
    var o = e.size,
      n = e.min,
      r = e.max,
      i = e.padding,
      s = o / 2;
    return o > r - n ? (r + n) / 2 : (n >= t - i - s && (t = n + i + s), r <= t + i + s && (t = r - i - s), t);
  }
  function St(t) {
    var e = t.options,
      o = e.arrowHeads && e.arrowHeads.start,
      n = e.arrowHeads && e.arrowHeads.end;
    return {
      startOpts: o,
      endOpts: n,
      startAdjust: Ct(t, o),
      endAdjust: Ct(t, n)
    };
  }
  function Ct(t, e) {
    if (!e || !e.display) return 0;
    var o = e.length,
      n = e.width,
      r = t.options.borderWidth / 2,
      i = {
        x: o,
        y: n + r
      },
      s = {
        x: 0,
        y: r
      };
    return Math.abs(lt(0, i, s));
  }
  function kt(t, e, o, n) {
    if (!n || !n.display) return;
    var r = n.length,
      i = n.width,
      s = n.fill,
      a = n.backgroundColor,
      d = n.borderColor,
      c = Math.abs(e - r) + o;
    t.beginPath(), j(t, n), A(t, n), t.moveTo(c, -i), t.lineTo(e + o, 0), t.lineTo(c, i), !0 === s ? (t.fillStyle = a || d, t.closePath(), t.fill(), t.shadowColor = "transparent") : t.shadowColor = n.borderShadowColor, t.stroke();
  }
  function Dt(t, _ref24, _ref25, i) {
    var e = _ref24.x,
      o = _ref24.y;
    var n = _ref25.angle,
      r = _ref25.adjust;
    i && i.display && (t.save(), t.translate(e, o), t.rotate(n), kt(t, 0, -r, i), t.restore());
  }
  gt.defaults = {
    adjustScaleRange: !0,
    arrowHeads: {
      display: !1,
      end: Object.assign({}, mt),
      fill: !1,
      length: 12,
      start: Object.assign({}, mt),
      width: 6
    },
    borderDash: [],
    borderDashOffset: 0,
    borderShadowColor: "transparent",
    borderWidth: 2,
    curve: !1,
    controlPoint: {
      y: "-50%"
    },
    display: !0,
    endValue: void 0,
    init: void 0,
    label: {
      backgroundColor: "rgba(0,0,0,0.8)",
      backgroundShadowColor: "transparent",
      borderCapStyle: "butt",
      borderColor: "black",
      borderDash: [],
      borderDashOffset: 0,
      borderJoinStyle: "miter",
      borderRadius: 6,
      borderShadowColor: "transparent",
      borderWidth: 0,
      callout: Object.assign({}, at.defaults.callout),
      color: "#fff",
      content: null,
      display: !1,
      drawTime: void 0,
      font: {
        family: void 0,
        lineHeight: void 0,
        size: void 0,
        style: void 0,
        weight: "bold"
      },
      height: void 0,
      opacity: void 0,
      padding: 6,
      position: "center",
      rotation: 0,
      shadowBlur: 0,
      shadowOffsetX: 0,
      shadowOffsetY: 0,
      textAlign: "center",
      textStrokeColor: void 0,
      textStrokeWidth: 0,
      width: void 0,
      xAdjust: 0,
      yAdjust: 0,
      z: void 0
    },
    scaleID: void 0,
    shadowBlur: 0,
    shadowOffsetX: 0,
    shadowOffsetY: 0,
    value: void 0,
    xMax: void 0,
    xMin: void 0,
    xScaleID: void 0,
    yMax: void 0,
    yMin: void 0,
    yScaleID: void 0,
    z: 0
  }, gt.descriptors = {
    arrowHeads: {
      start: {
        _fallback: !0
      },
      end: {
        _fallback: !0
      },
      _fallback: !0
    }
  }, gt.defaultRoutes = {
    borderColor: "color"
  };
  var At = /*#__PURE__*/function (_t$Element4) {
    function At() {
      _classCallCheck(this, At);
      return _callSuper(this, At, arguments);
    }
    _inherits(At, _t$Element4);
    return _createClass(At, [{
      key: "inRange",
      value: function inRange(t, o, n, r) {
        var i = this.options.rotation,
          a = this.options.borderWidth;
        if ("x" !== n && "y" !== n) return function (t, o, n, r) {
          var i = o.width,
            s = o.height,
            a = o.centerX,
            d = o.centerY,
            c = i / 2,
            l = s / 2;
          if (c <= 0 || l <= 0) return !1;
          var h = e.toRadians(n || 0),
            u = r / 2 || 0,
            f = Math.cos(h),
            x = Math.sin(h),
            y = Math.pow(f * (t.x - a) + x * (t.y - d), 2),
            p = Math.pow(x * (t.x - a) - f * (t.y - d), 2);
          return y / Math.pow(c + u, 2) + p / Math.pow(l + u, 2) <= 1.0001;
        }({
          x: t,
          y: o
        }, this.getProps(["width", "height", "centerX", "centerY"], r), i, a);
        var _this$getProps = this.getProps(["x", "y", "x2", "y2"], r),
          d = _this$getProps.x,
          c = _this$getProps.y,
          l = _this$getProps.x2,
          h = _this$getProps.y2,
          u = a / 2,
          f = "y" === n ? {
            start: c,
            end: h
          } : {
            start: d,
            end: l
          },
          x = $({
            x: t,
            y: o
          }, this.getCenterPoint(r), e.toRadians(-i));
        return x[n] >= f.start - u - s && x[n] <= f.end + u + s;
      }
    }, {
      key: "getCenterPoint",
      value: function getCenterPoint(t) {
        return l(this, t);
      }
    }, {
      key: "draw",
      value: function draw(t) {
        var o = this.width,
          n = this.height,
          r = this.centerX,
          i = this.centerY,
          s = this.options;
        t.save(), D(t, this.getCenterPoint(), s.rotation), j(t, this.options), t.beginPath(), t.fillStyle = s.backgroundColor;
        var a = A(t, s);
        t.ellipse(r, i, n / 2, o / 2, e.PI / 2, 0, 2 * e.PI), t.fill(), a && (t.shadowColor = s.borderShadowColor, t.stroke()), t.restore();
      }
    }, {
      key: "label",
      get: function get() {
        return this.elements && this.elements[0];
      }
    }, {
      key: "resolveElementProperties",
      value: function resolveElementProperties(t, e) {
        return H(t, e);
      }
    }]);
  }(t.Element);
  At.id = "ellipseAnnotation", At.defaults = {
    adjustScaleRange: !0,
    backgroundShadowColor: "transparent",
    borderDash: [],
    borderDashOffset: 0,
    borderShadowColor: "transparent",
    borderWidth: 1,
    display: !0,
    init: void 0,
    label: Object.assign({}, it.defaults.label),
    rotation: 0,
    shadowBlur: 0,
    shadowOffsetX: 0,
    shadowOffsetY: 0,
    xMax: void 0,
    xMin: void 0,
    xScaleID: void 0,
    yMax: void 0,
    yMin: void 0,
    yScaleID: void 0,
    z: 0
  }, At.defaultRoutes = {
    borderColor: "color",
    backgroundColor: "color"
  }, At.descriptors = {
    label: {
      _fallback: !0
    }
  };
  var jt = /*#__PURE__*/function (_t$Element5) {
    function jt() {
      _classCallCheck(this, jt);
      return _callSuper(this, jt, arguments);
    }
    _inherits(jt, _t$Element5);
    return _createClass(jt, [{
      key: "inRange",
      value: function inRange(t, e, o, n) {
        var _this$getProps2 = this.getProps(["x", "y", "x2", "y2", "width"], n),
          r = _this$getProps2.x,
          i = _this$getProps2.y,
          s = _this$getProps2.x2,
          a = _this$getProps2.y2,
          d = _this$getProps2.width,
          c = this.options.borderWidth;
        if ("x" !== o && "y" !== o) return function (t, e, o, n) {
          if (!t || !e || o <= 0) return !1;
          var r = n / 2;
          return Math.pow(t.x - e.x, 2) + Math.pow(t.y - e.y, 2) <= Math.pow(o + r, 2);
        }({
          x: t,
          y: e
        }, this.getCenterPoint(n), d / 2, c);
        var l = c / 2,
          h = "y" === o ? {
            start: i,
            end: a,
            value: e
          } : {
            start: r,
            end: s,
            value: t
          };
        return h.value >= h.start - l && h.value <= h.end + l;
      }
    }, {
      key: "getCenterPoint",
      value: function getCenterPoint(t) {
        return l(this, t);
      }
    }, {
      key: "draw",
      value: function draw(t) {
        var e = this.options,
          o = e.borderWidth;
        if (e.radius < .1) return;
        t.save(), t.fillStyle = e.backgroundColor, j(t, e);
        var n = A(t, e);
        R(t, this, this.centerX, this.centerY), n && !k(e.pointStyle) && (t.shadowColor = e.borderShadowColor, t.stroke()), t.restore(), e.borderWidth = o;
      }
    }, {
      key: "resolveElementProperties",
      value: function resolveElementProperties(t, e) {
        var o = F(t, e);
        return o.initProperties = v(t, o, e), o;
      }
    }]);
  }(t.Element);
  jt.id = "pointAnnotation", jt.defaults = {
    adjustScaleRange: !0,
    backgroundShadowColor: "transparent",
    borderDash: [],
    borderDashOffset: 0,
    borderShadowColor: "transparent",
    borderWidth: 1,
    display: !0,
    init: void 0,
    pointStyle: "circle",
    radius: 10,
    rotation: 0,
    shadowBlur: 0,
    shadowOffsetX: 0,
    shadowOffsetY: 0,
    xAdjust: 0,
    xMax: void 0,
    xMin: void 0,
    xScaleID: void 0,
    xValue: void 0,
    yAdjust: 0,
    yMax: void 0,
    yMin: void 0,
    yScaleID: void 0,
    yValue: void 0,
    z: 0
  }, jt.defaultRoutes = {
    borderColor: "color",
    backgroundColor: "color"
  };
  var It = /*#__PURE__*/function (_t$Element6) {
    function It() {
      _classCallCheck(this, It);
      return _callSuper(this, It, arguments);
    }
    _inherits(It, _t$Element6);
    return _createClass(It, [{
      key: "inRange",
      value: function inRange(t, o, n, r) {
        if ("x" !== n && "y" !== n) return this.options.radius >= .1 && this.elements.length > 1 && function (t, e, o, n) {
          var r = !1,
            i = t[t.length - 1].getProps(["bX", "bY"], n);
          var _iterator5 = _createForOfIteratorHelper(t),
            _step5;
          try {
            for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {
              var _s5 = _step5.value;
              var _t7 = _s5.getProps(["bX", "bY"], n);
              _t7.bY > o != i.bY > o && e < (i.bX - _t7.bX) * (o - _t7.bY) / (i.bY - _t7.bY) + _t7.bX && (r = !r), i = _t7;
            }
          } catch (err) {
            _iterator5.e(err);
          } finally {
            _iterator5.f();
          }
          return r;
        }(this.elements, t, o, r);
        var i = $({
            x: t,
            y: o
          }, this.getCenterPoint(r), e.toRadians(-this.options.rotation)),
          s = this.elements.map(function (t) {
            return "y" === n ? t.bY : t.bX;
          }),
          a = Math.min.apply(Math, _toConsumableArray(s)),
          d = Math.max.apply(Math, _toConsumableArray(s));
        return i[n] >= a && i[n] <= d;
      }
    }, {
      key: "getCenterPoint",
      value: function getCenterPoint(t) {
        return l(this, t);
      }
    }, {
      key: "draw",
      value: function draw(t) {
        var e = this.elements,
          o = this.options;
        t.save(), t.beginPath(), t.fillStyle = o.backgroundColor, j(t, o);
        var n = A(t, o);
        var r = !0;
        var _iterator6 = _createForOfIteratorHelper(e),
          _step6;
        try {
          for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {
            var _o7 = _step6.value;
            r ? (t.moveTo(_o7.x, _o7.y), r = !1) : t.lineTo(_o7.x, _o7.y);
          }
        } catch (err) {
          _iterator6.e(err);
        } finally {
          _iterator6.f();
        }
        t.closePath(), t.fill(), n && (t.shadowColor = o.borderShadowColor, t.stroke()), t.restore();
      }
    }, {
      key: "resolveElementProperties",
      value: function resolveElementProperties(t, o) {
        var n = F(t, o),
          r = o.sides,
          i = o.rotation,
          s = [],
          a = 2 * e.PI / r;
        var d = i * e.RAD_PER_DEG;
        for (var _e5 = 0; _e5 < r; _e5++, d += a) {
          var _e6 = Ot(n, o, d);
          _e6.initProperties = v(t, n, o), s.push(_e6);
        }
        return n.elements = s, n;
      }
    }]);
  }(t.Element);
  function Ot(_ref26, _ref27, r) {
    var t = _ref26.centerX,
      e = _ref26.centerY;
    var o = _ref27.radius,
      n = _ref27.borderWidth;
    var i = n / 2,
      s = Math.sin(r),
      a = Math.cos(r),
      d = {
        x: t + s * o,
        y: e - a * o
      };
    return {
      type: "point",
      optionScope: "point",
      properties: {
        x: d.x,
        y: d.y,
        centerX: d.x,
        centerY: d.y,
        bX: t + s * (o + i),
        bY: e - a * (o + i)
      }
    };
  }
  It.id = "polygonAnnotation", It.defaults = {
    adjustScaleRange: !0,
    backgroundShadowColor: "transparent",
    borderCapStyle: "butt",
    borderDash: [],
    borderDashOffset: 0,
    borderJoinStyle: "miter",
    borderShadowColor: "transparent",
    borderWidth: 1,
    display: !0,
    init: void 0,
    point: {
      radius: 0
    },
    radius: 10,
    rotation: 0,
    shadowBlur: 0,
    shadowOffsetX: 0,
    shadowOffsetY: 0,
    sides: 3,
    xAdjust: 0,
    xMax: void 0,
    xMin: void 0,
    xScaleID: void 0,
    xValue: void 0,
    yAdjust: 0,
    yMax: void 0,
    yMin: void 0,
    yScaleID: void 0,
    yValue: void 0,
    z: 0
  }, It.defaultRoutes = {
    borderColor: "color",
    backgroundColor: "color"
  };
  var Tt = {
    box: it,
    ellipse: At,
    label: at,
    line: gt,
    point: jt,
    polygon: It
  };
  Object.keys(Tt).forEach(function (e) {
    t.defaults.describe("elements.".concat(Tt[e].id), {
      _fallback: "plugins.annotation.common"
    });
  });
  var Rt = {
      update: Object.assign
    },
    Yt = J.concat(K),
    Xt = function Xt(t, o) {
      return e.isObject(o) ? Vt(t, o) : t;
    },
    Et = function Et(t) {
      return "color" === t || "font" === t;
    };
  function Wt() {
    var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "line";
    return Tt[t] ? t : (console.warn("Unknown annotation type: '".concat(t, "', defaulting to 'line'")), "line");
  }
  function _t(o, n, r, i) {
    var s = function (e, o, n) {
        if ("reset" === n || "none" === n || "resize" === n) return Rt;
        return new t.Animations(e, o);
      }(o, r.animations, i),
      a = n.annotations,
      d = function (t, e) {
        var o = e.length,
          n = t.length;
        if (n < o) {
          var _e7 = o - n;
          t.splice.apply(t, [n, 0].concat(_toConsumableArray(new Array(_e7))));
        } else n > o && t.splice(o, n - o);
        return t;
      }(n.elements, a);
    for (var _t8 = 0; _t8 < a.length; _t8++) {
      var _n7 = a[_t8],
        _r7 = Nt(d, _t8, _n7.type),
        _i9 = _n7.setContext(Bt(o, _r7, _n7)),
        _c3 = _r7.resolveElementProperties(o, _i9);
      _c3.skip = zt(_c3), "elements" in _c3 && (Ft(_r7, _c3.elements, _i9, s), delete _c3.elements), e.defined(_r7.x) || Object.assign(_r7, _c3), Object.assign(_r7, _c3.initProperties), _c3.options = Ht(_i9), s.update(_r7, _c3);
    }
  }
  function zt(t) {
    return isNaN(t.x) || isNaN(t.y);
  }
  function Ft(t, e, o, n) {
    var r = t.elements || (t.elements = []);
    r.length = e.length;
    for (var _t9 = 0; _t9 < e.length; _t9++) {
      var _i10 = e[_t9],
        _s6 = _i10.properties,
        _a4 = Nt(r, _t9, _i10.type, _i10.initProperties),
        _d4 = o[_i10.optionScope].override(_i10);
      _s6.options = Ht(_d4), n.update(_a4, _s6);
    }
  }
  function Nt(t, e, o, n) {
    var r = Tt[Wt(o)];
    var i = t[e];
    return i && i instanceof r || (i = t[e] = new r(), Object.assign(i, n)), i;
  }
  function Ht(t) {
    var e = Tt[Wt(t.type)],
      o = {};
    o.id = t.id, o.type = t.type, o.drawTime = t.drawTime, Object.assign(o, Vt(t, e.defaults), Vt(t, e.defaultRoutes));
    var _iterator7 = _createForOfIteratorHelper(Yt),
      _step7;
    try {
      for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {
        var _e8 = _step7.value;
        o[_e8] = t[_e8];
      }
    } catch (err) {
      _iterator7.e(err);
    } finally {
      _iterator7.f();
    }
    return o;
  }
  function Vt(t, o) {
    var n = {};
    var _loop = function _loop() {
      var r = _Object$keys3[_i11];
      var i = o[r],
        s = t[r];
      Et(r) && e.isArray(s) ? n[r] = s.map(function (t) {
        return Xt(t, i);
      }) : n[r] = Xt(s, i);
    };
    for (var _i11 = 0, _Object$keys3 = Object.keys(o); _i11 < _Object$keys3.length; _i11++) {
      _loop();
    }
    return n;
  }
  function Bt(t, e, o) {
    return e.$context || (e.$context = Object.assign(Object.create(t.getContext()), {
      element: e,
      id: o.id,
      type: "annotation"
    }));
  }
  var Lt = new Map(),
    $t = J.concat(K);
  var Ut = {
    id: "annotation",
    version: "3.0.1",
    beforeRegister: function beforeRegister() {
      !function (t, e, o) {
        var n = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : !0;
        var r = o.split(".");
        var s = 0;
        var _iterator8 = _createForOfIteratorHelper(e.split(".")),
          _step8;
        try {
          for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {
            var _a5 = _step8.value;
            var _d5 = r[s++];
            if (parseInt(_a5, 10) < parseInt(_d5, 10)) break;
            if (i(_d5, _a5)) {
              if (n) throw new Error("".concat(t, " v").concat(o, " is not supported. v").concat(e, " or newer is required."));
              return !1;
            }
          }
        } catch (err) {
          _iterator8.e(err);
        } finally {
          _iterator8.f();
        }
      }("chart.js", "4.0", t.Chart.version);
    },
    afterRegister: function afterRegister() {
      t.Chart.register(Tt);
    },
    afterUnregister: function afterUnregister() {
      t.Chart.unregister(Tt);
    },
    beforeInit: function beforeInit(t) {
      Lt.set(t, {
        annotations: [],
        elements: [],
        visibleElements: [],
        listeners: {},
        listened: !1,
        moveListened: !1,
        hooks: {},
        hooked: !1,
        hovered: []
      });
    },
    beforeUpdate: function beforeUpdate(t, o, n) {
      var r = Lt.get(t).annotations = [];
      var i = n.annotations;
      e.isObject(i) ? Object.keys(i).forEach(function (t) {
        var o = i[t];
        e.isObject(o) && (o.id = t, r.push(o));
      }) : e.isArray(i) && r.push.apply(r, _toConsumableArray(i)), function (t, e) {
        var _iterator9 = _createForOfIteratorHelper(t),
          _step9;
        try {
          for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {
            var _o8 = _step9.value;
            ot(_o8, e);
          }
        } catch (err) {
          _iterator9.e(err);
        } finally {
          _iterator9.f();
        }
      }(r, t.scales);
    },
    afterDataLimits: function afterDataLimits(t, e) {
      var o = Lt.get(t);
      tt(t, e.scale, o.annotations.filter(function (t) {
        return t.display && t.adjustScaleRange;
      }));
    },
    afterUpdate: function afterUpdate(t, o, r) {
      var i = Lt.get(t);
      !function (t, o, r) {
        o.listened = w(r, J, o.listeners), o.moveListened = !1, o._getElements = n, U.forEach(function (t) {
          e.isFunction(r[t]) && (o.moveListened = !0);
        }), o.listened && o.moveListened || o.annotations.forEach(function (t) {
          !o.listened && e.isFunction(t.click) && (o.listened = !0), o.moveListened || U.forEach(function (n) {
            e.isFunction(t[n]) && (o.listened = !0, o.moveListened = !0);
          });
        });
      }(0, i, r), _t(t, i, r, o.mode), i.visibleElements = i.elements.filter(function (t) {
        return !t.skip && t.options.display;
      }), function (t, o, n) {
        var r = o.visibleElements;
        o.hooked = w(n, K, o.hooks), o.hooked || r.forEach(function (t) {
          o.hooked || K.forEach(function (n) {
            e.isFunction(t.options[n]) && (o.hooked = !0);
          });
        });
      }(0, i, r);
    },
    beforeDatasetsDraw: function beforeDatasetsDraw(t, e, o) {
      Jt(t, "beforeDatasetsDraw", o.clip);
    },
    afterDatasetsDraw: function afterDatasetsDraw(t, e, o) {
      Jt(t, "afterDatasetsDraw", o.clip);
    },
    beforeDraw: function beforeDraw(t, e, o) {
      Jt(t, "beforeDraw", o.clip);
    },
    afterDraw: function afterDraw(t, e, o) {
      Jt(t, "afterDraw", o.clip);
    },
    beforeEvent: function beforeEvent(t, e, o) {
      Q(Lt.get(t), e.event, o) && (e.changed = !0);
    },
    afterDestroy: function afterDestroy(t) {
      Lt["delete"](t);
    },
    _getState: function _getState(t) {
      return Lt.get(t);
    },
    defaults: {
      animations: {
        numbers: {
          properties: ["x", "y", "x2", "y2", "width", "height", "centerX", "centerY", "pointX", "pointY", "radius"],
          type: "number"
        }
      },
      clip: !0,
      interaction: {
        mode: void 0,
        axis: void 0,
        intersect: void 0
      },
      common: {
        drawTime: "afterDatasetsDraw",
        init: !1,
        label: {}
      }
    },
    descriptors: {
      _indexable: !1,
      _scriptable: function _scriptable(t) {
        return !$t.includes(t) && "init" !== t;
      },
      annotations: {
        _allKeys: !1,
        _fallback: function _fallback(t, e) {
          return "elements.".concat(Tt[Wt(e.type)].id);
        }
      },
      interaction: {
        _fallback: !0
      },
      common: {
        label: {
          _indexable: Et,
          _fallback: !0
        },
        _indexable: Et
      }
    },
    additionalOptionScopes: [""]
  };
  function Jt(t, o, n) {
    var r = t.ctx,
      i = t.chartArea,
      s = Lt.get(t);
    n && e.clipArea(r, i);
    var a = function (t, e) {
      var o = [];
      var _iterator10 = _createForOfIteratorHelper(t),
        _step10;
      try {
        for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {
          var _n8 = _step10.value;
          if (_n8.options.drawTime === e && o.push({
            element: _n8,
            main: !0
          }), _n8.elements && _n8.elements.length) {
            var _iterator11 = _createForOfIteratorHelper(_n8.elements),
              _step11;
            try {
              for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {
                var _t10 = _step11.value;
                _t10.options.display && _t10.options.drawTime === e && o.push({
                  element: _t10
                });
              }
            } catch (err) {
              _iterator11.e(err);
            } finally {
              _iterator11.f();
            }
          }
        }
      } catch (err) {
        _iterator10.e(err);
      } finally {
        _iterator10.f();
      }
      return o;
    }(s.visibleElements, o).sort(function (t, e) {
      return t.element.options.z - e.element.options.z;
    });
    var _iterator12 = _createForOfIteratorHelper(a),
      _step12;
    try {
      for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {
        var _t11 = _step12.value;
        Qt(r, i, s, _t11);
      }
    } catch (err) {
      _iterator12.e(err);
    } finally {
      _iterator12.f();
    }
    n && e.unclipArea(r);
  }
  function Qt(t, e, o, n) {
    var r = n.element;
    n.main ? (Z(o, r, "beforeDraw"), r.draw(t, e), Z(o, r, "afterDraw")) : r.draw(t, e);
  }
  return t.Chart.register(Ut), Ut;
});
